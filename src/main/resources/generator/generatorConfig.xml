<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!-- 引入配置文件 -->
    <!-- 可以统一配置需要的信息 -->
    <!--<properties resource="application.properties"/>-->
    <!--数据库驱动jar, 指定本地maven仓库的mysql-connector-java-*.*.**.jar -->
    <!--    <classPathEntry-->
    <!--            location="D:\SoftwareDatum\Maven\mysql\mysql-connector-java\5.1.35\mysql-connector-java-5.1.35.jar"/>-->

    <!-- targetRuntime: 使用哪个IntrospectedTable子类-->
    <context id="DB2Tables" targetRuntime="MyBatis3">

        <!--去除注释  -->
        <!--        <commentGenerator type="PlatformCommentGenerator">  &lt;!&ndash; type指定注释类 &ndash;&gt;-->
        <!--            &lt;!&ndash; 是否取消注释 &ndash;&gt;-->
        <!--            <property name="suppressAllComments" value="false"/>-->
        <!--            <property name="author" value="pinsily"/>       &lt;!&ndash; 类注释@author 注解值&ndash;&gt;-->
        <!--            &lt;!&ndash; <property name="suppressDate" value="true" />  是否生成注释代时间戳 &ndash;&gt;-->
        <!--        </commentGenerator>-->
        <!--数据库连接 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/car_rental"
                        userId="root" password="pinsily96">
        </jdbcConnection>
        <!--默认false
           Java type resolver will always use java.math.BigDecimal if the database column is of type DECIMAL or NUMERIC.
         -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!--生成实体类 指定包名 以及生成的地址 （可以自定义地址，但是路径不存在不会自动创建  使用Maven生成在target目录下，会自动创建） -->
        <!--文件存放路径(targetProject) targetProject可以指定具体的路径,如./src/main/java， 也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下-->
        <!-- 用maven自动生成的话，生成之后剪切到对应的项目目录下 -->
        <javaModelGenerator targetPackage="com.pinsily.car_rental.dao.domain" targetProject="MAVEN">
            <property name="enableSubPackages" value="false"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!--生成SQLMAP文件 -->
        <!-- mapper是dao 映射文件，项目约定放到 src/main/resource 目录下 -->
        <sqlMapGenerator targetPackage="com.pinsily.car_rental.dao.mappers" targetProject="MAVEN">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>
        <!--生成Dao文件 可以配置 type="XMLMAPPER"生成xml的dao实现  context id="DB2Tables" 修改targetRuntime="MyBatis3"  -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.pinsily.car_rental.dao.dao" targetProject="MAVEN">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>
        <!-- 生成daologic文件 -->
        <!--        <javaDaoLogicGenerator targetPackage="com.fenqile.allspark.daologic" targetProject="MAVEN" type="XMLMAPPER">-->
        <!--            <property name="enableSubPackages" value="false"/>-->
        <!--        </javaDaoLogicGenerator>-->
        <!-- 生成其他文件 -->
        <!-- targetPackage填根路径就好 -->
        <!-- subPackageName可以继续划分package -->
        <!--        <javaCodeGenerator targetPackage="com.fenqile.allspark" targetProject="MAVEN" type="XMLMAPPER" subPackageName="">-->
        <!--            <property name="enableSubPackages" value="false"/>-->
        <!--        </javaCodeGenerator>-->

        <!--        <table tableName="t_auth_template" domainObjectName="AuthTemplate">-->
        <!--            <columnRenamingRule searchString="^F" replaceString=""/>-->
        <!--        </table>-->
        <table tableName="t_car" domainObjectName="Car"></table>
        <table tableName="t_order" domainObjectName="Order"></table>


    </context>
</generatorConfiguration>


